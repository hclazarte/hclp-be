openapi: 3.0.1
info:
  title: API de Gestión de Citas Médicas
  description: API para la gestión de usuarios, médicos, pacientes y citas
  version: v1
servers:
  - url: http://localhost:3001/api
    description: Servidor local
  - url: https://hclp.online/api
    description: Servidor de prueba desarrollo
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Usuario:
      type: object
      properties:
        nombre:
          type: string
          example: Juan
        apellido_paterno:
          type: string
          example: Pérez
        email:
          type: string
          format: email
          example: juan.perez@example.com
        password:
          type: string
          format: password
          example: secret123
        rol:
          type: string
          enum:
            - admin
            - medico
            - paciente
          example: paciente
    Paciente:
      type: object
      properties:
        nombre:
          type: string
          example: María
        apellido_paterno:
          type: string
          example: González
        cedula:
          type: string
          example: 12345678
        fecha_nacimiento:
          type: string
          format: date
          example: 1990-05-15
        tipo_sangre:
          type: string
          enum:
            - orh_n
            - orh_p
            - arh_n
            - arh_p
            - brh_n
            - brh_p
            - abrh_n
            - abrh_p
          example: orh_p
        estado_civil:
          type: string
          enum:
            - soltero
            - casado
            - divorciado
            - viudo
          example: soltero
        tipo_afiliado:
          type: string
          enum:
            - titular
            - beneficiario
          example: titular
        estado:
          type: string
          enum:
            - alta
            - baja
          example: alta
        usuario_id:
          type: integer
          example: 1
    Medico:
      type: object
      properties:
        nombre:
          type: string
          example: Luis
        apellido_paterno:
          type: string
          example: Fernández
        apellido_materno:
          type: string
          example: López
        cedula:
          type: string
          example: 87654321
        direccion:
          type: string
          example: Av. Principal 456, Cochabamba
        movil:
          type: string
          example: +59176543210
        telefono:
          type: string
          example: +59122567890
        email:
          type: string
          format: email
          example: luis.fernandez@example.com
        registro_profesional:
          type: string
          example: MED123456
        estado:
          type: string
          enum:
            - alta
            - baja
          example: alta
        usuario_id:
          type: integer
          example: 1
        especialidades:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              nombre:
                type: string
                example: Cardiología
              descripcion:
                type: string
                example: Especialidad en enfermedades del corazón
        horario_medicos:
          type: array
          items:
            type: object
            properties:
              dia:
                type: string
                example: lunes
              hora_inicio:
                type: string
                example: 08:00
              hora_fin:
                type: string
                example: 12:00
    Cita:
      type: object
      properties:
        fecha:
          type: string
          format: date
          example: 2025-04-15
        hora:
          type: string
          example: "14:30"
        estado:
          type: string
          enum:
            - pendiente
            - confirmada
            - cancelada
            - atendida
          example: pendiente
        paciente_id:
          type: integer
          example: 1
        medico_id:
          type: integer
          example: 2
paths:
  /ping:
    get:
      summary: Verifica si la API está activa
      tags:
        - General
      responses:
        '200':
          description: La API está funcionando
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
  /login:
    post:
      summary: Inicia sesión y obtiene un token de acceso
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "walter.fuertes@hclp.online"
                password:
                  type: string
                  format: password
                  example: "adminSecure123"
              required:
                - email
                - password
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: Bearer
                  expires_in:
                    type: integer
        '401':
          description: Credenciales incorrectas 
  /usuarios/filtrar:
    patch:
      summary: Filtra usuarios con parámetros avanzados
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Número de la página a solicitar
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Cantidad de registros por página
          required: false
          schema:
            type: integer
            default: 15
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  $ref: '#/components/schemas/Usuario'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
                    password:
                      type: string
                      description: Password
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  per_page:
                    type: integer
                  count:
                    type: integer
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Usuario'
  /usuarios:
   post:
      summary: Crea un nuevo usuario
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  $ref: '#/components/schemas/Usuario'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
                    password:
                      type: string
                      description: Password
      responses:
        '201':
          description: Usuario creado correctamente
  /usuarios/{id}:
    get:
      summary: Obtiene un usuario por ID
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualiza un usuario
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  $ref: '#/components/schemas/Usuario'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
                    password:
                      type: string
                      description: Password
      responses:
        '200':
          description: Usuario actualizado correctamente
    delete:
      summary: Elimina un usuario
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado correctamente
  /pacientes/filtrar:
    patch:
      summary: Filtra pacientes por parámetros avanzados
      tags:
        - Pacientes
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Número de la página a solicitar
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Cantidad de registros por página
          required: false
          schema:
            type: integer
            default: 15
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente:
                  $ref: '#/components/schemas/Paciente'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
      responses:
        '200':
          description: Lista de pacientes obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Paciente'
  /pacientes:
    post:
      summary: Crea un nuevo paciente
      tags:
        - Pacientes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente:
                  $ref: '#/components/schemas/Paciente'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
      responses:
        '201':
          description: Paciente creado correctamente
  /pacientes/{id}:
    get:
      summary: Obtiene un paciente por ID
      tags:
        - Pacientes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Paciente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paciente'
    put:
      summary: Actualiza un paciente
      tags:
        - Pacientes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paciente:
                  $ref: '#/components/schemas/Paciente'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
      responses:
        '200':
          description: Paciente actualizado correctamente
    delete:
      summary: Elimina un paciente
      tags:
        - Pacientes
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Paciente eliminado correctamente
  /medicos/filtrar:
    patch:
      summary: Obtiene la lista de médicos
      tags:
        - Médicos
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Número de la página a solicitar
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Cantidad de registros por página
          required: false
          schema:
            type: integer
            default: 15
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                medico:
                  $ref: '#/components/schemas/Medico'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
      responses:
        '200':
          description: Lista de médicos obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medico'
  /medicos:
    post:
      summary: Crea un nuevo medico
      tags:
        - Médicos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medico:
                  $ref: '#/components/schemas/Medico'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
      responses:
        '201':
          description: Médico creado correctamente
  /medicos/{id}:
    get:
      summary: Obtiene un médico por ID
      tags:
        - Médicos
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Médico encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medico'
    put:
      summary: Actualiza un médico
      tags:
        - Médicos
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                medico:
                  $ref: '#/components/schemas/Medico'
                  type: object
                  properties:
                    nombre:
                      type: string
                      description: Nombre
                    apellido_paterno:
                      type: string
                      description: Apellido
                    email:
                      type: string
                      description: Email
      responses:
        '200':
          description: Médico actualizado correctamente
    delete:
      summary: Elimina un médico
      tags:
        - Médicos
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Médico eliminado correctamente
  /citas/disponibles:
    post:
      summary: Obtiene las citas disponibles para una especialidad
      tags:
        - Citas
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                especialidad_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Lista de citas disponibles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    medico_id:
                      type: integer
                      example: 3
                    especialidad_id:
                      type: integer
                      example: 1
                    medico_nombre:
                      type: string
                      example: "Gregory House"
                    especialidad:
                      type: string
                      example: "Diagnóstico Médico"
                    dia:
                      type: string
                      example: "Lunes"
                    hora:
                      type: string
                      example: "08:00"
                    fecha:
                      type: string
                      format: date
                      example: "2025-03-20"
        '404':
          description: Especialidad no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Especialidad no encontrada"
  /citas:
    get:
      summary: Obtiene la lista de citas
      tags:
        - Citas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de citas obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cita'
    post:
      summary: Crea una nueva cita
      tags:
        - Citas
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cita'
      responses:
        '201':
          description: Cita creada correctamente
  /citas/{id}:
    get:
      summary: Obtiene una cita por ID
      tags:
        - Citas
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cita encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cita'
    delete:
      summary: Cancela una cita
      tags:
        - Citas
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Cita cancelada correctamente
